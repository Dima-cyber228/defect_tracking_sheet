
1.  Откройте терминал и перейдите в корневую папку проекта `defect_tracking_sheet` (как описано в предыдущих инструкциях).

2.  Активируйте виртуальное окружение (если оно у вас есть):
 
    venv\Scripts\activate
 
3.  Запустите `uvicorn`, указав хост `0.0.0.0`:
  
    uvicorn app.main:app --host 0.0.0.0 --port 8080 --reload
    ```
    *   `--host 0.0.0.0`: Эта опция говорит `uvicorn` слушать все доступные сетевые интерфейсы вашего компьютера, а не только внутренний `localhost`. Это делает сервер доступным для внешних подключений.
    *   `--port 8080`: Указывает порт (вы можете изменить его, если 8080 занят). Убедитесь, что указанный порт не блокируется брандмауэром.
    *   `--reload`: (Опционально, для разработки) Автоматически перезапускает сервер при изменении кода.

4.  Узнайте IP-адрес вашего компьютера в локальной сети

5.  Доступ с других ПК

    На других компьютерах в той же локальной сети откройте веб-браузер и введите адрес:
    ```
    http://<ВАШ_IP_АДРЕС>:8080
    ```
    Замените `<ВАШ_IP_АДРЕС>` на IP-адрес компьютера, на котором запущен сервер. Например, если ваш IP `192.168.1.10`, введите:
    ```
    http://192.168.1.10:8080
    ```
Важные замечания:

*   Брандмауэр: Убедитесь, что брандмауэр Windows (или другой операционной системы) разрешает входящие подключения на порт, который вы указали (в данном случае `8000`). Возможно, потребуется создать правило для `python.exe` или конкретно для порта `8000`.
*   Сетевая конфигурация: Убедитесь, что все компьютеры находятся в одной локальной сети (например, подключены к одному и тому же Wi-Fi роутеру).
*   Безопасность: Запуск сервера с `--host 0.0.0.0` делает его потенциально доступным для *любого* устройства, которое может достичь вашего компьютера по сети. В продакшене или в ненадежных сетях это может быть небезопасно. Для локальной разработки и тестирования обычно это приемлемо.



Увидеть главную страницу
http://127.0.0.1:8080
Увидеть административную панель
http://127.0.0.1:8080/admin
Увидеть страницу подписки
http://127.0.0.1:8080/subscribe
Проверить данные о списках (для отладки)
http://127.0.0.1:8080/dropdown-lists/
Проверить список дефектов (для отладки)
http://127.0.0.1:8080/defects/
